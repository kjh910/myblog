version: '3.8'

services:
  backend:
    build:
      context: ./backend/app
    container_name: myblog_backend
    volumes:
      - ./backend/app:/app
    environment:
      DB_HOSTNAME: db
      DB_PORT: 5432
    ports:
      - "6001:8001"
    expose:
      - "6001"
      - "8001"

    depends_on:
      - db
    networks:
      - myblog

  frontend:
    build:
      context: ./frontend/app
    container_name: myblog_frontend
    volumes:
      - ./frontend/app:/app
    ports:
      - "7001:9001"
    expose:
      - "7001"
    depends_on:
      - db
      - backend
    networks:
      - myblog

  backend_nginx:
    build:
      context: ./backend/nginx
    container_name: myblog_backend_nginx
    environment:
      TZ: 'Asia/Tokyo'
    volumes:
      - ./backend/nginx/conf:/etc/nginx/conf.d
      - ./backend/app/static:/usr/share/nginx/static:ro
    expose:
      - "8001"
      - "6001"
    ports:
      - "8001:8001"
    depends_on:
      - db 
      - backend
    networks:
      - myblog
  
  frontend_nginx:
    build:
      context: ./frontend/nginx
    container_name: myblog_frontend_nginx
    environment:
      TZ: 'Asia/Tokyo'
    volumes:
      - ./frontend/nginx/conf:/etc/nginx/conf.d
    ports:
      - "9001:9001"
    expose:
      - "9001"
    depends_on:
      - db 
      - frontend
    networks:
      - myblog

  db:
    build:
      context: ./db
    container_name: myblog_db
    ports:
      - "5432:5432"
    environment:
      DB_HOSTNAME: db
      DB_PORT: 5432
      POSTGRES_USER: "myblog"
      POSTGRES_PASSWORD: "myblog"
      POSTGRES_DB: "myblog"
    volumes:
      - ./db/lib/:/var/lib/postgresql/data
    networks:
      - myblog
  
  # rabbit:
  #   environment:
  #     - DEFAULT_USER=guest
  #     - DEFAULT_PASS=guest
  #   image: rabbitmq:3.9.12
  #   container_name: myblog_rabbit
  #   ports:
  #     - "5673:5672" # we forward this port because it's useful for debugging
  #     - "15673:15672" # here, we can access rabbitmq management plugin
  #   networks:
  #     - myblog

  # redis:
  #   image: redis:6.2.6
  #   container_name: myblog_redis
  #   ports:
  #     - "6380:6380"
  #   command: redis-server --requirepass sOmE_sEcUrE_pAsS
  #   networks:
  #     - myblog

networks:
  myblog:
    name: myblog
    driver: bridge